commit d88368e3c9985c17dc9e9120c307aeda538a1c3b
Merge: af3d6c3 2381a04
Author: Lee Spector <lspector@hampshire.edu>
Date:   Mon Jun 18 06:28:32 2012 -0700

    Merge pull request #15 from lspector/no-infinite-strings
    
    No infinite strings

commit 2381a04b97e0262360dbf457c35f0139b6494ce5
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Mon Jun 18 09:07:57 2012 -0400

    Fixed bugs in string_concat.

commit a1a3930f20e51adcf7e0f7141586fbc7378f19c1
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Mon Jun 18 08:58:29 2012 -0400

    Fixed issue with infinite concat of strings.
    Also, added classes/* to .gitignore.

commit af3d6c32b1fea078c0de090f36e224bd23c53e62
Author: Lee Spector <lspector@hampshire.edu>
Date:   Thu Jun 14 13:32:25 2012 -0400

    Version bump

commit 4c957587f54aecae8e5dff1f85553da55302577e
Author: Lee Spector <lspector@hampshire.edu>
Date:   Thu Jun 14 13:29:41 2012 -0400

    Removed experimental directory (will be own branch).

commit c7b73f956e26074243159a3a71a0f0049d0fb2e1
Author: Lee Spector <lspector@hampshire.edu>
Date:   Tue Jun 12 18:56:14 2012 -0400

    New string instructions.

commit 717da749ff38002b38089127f071854a3708bb61
Merge: 4c73dbf 96e052a
Author: Lee Spector <lspector@hampshire.edu>
Date:   Tue Jun 12 18:52:39 2012 -0400

    Merge remote branch 'origin/new-string-instructions' into working

commit 4c73dbfaadce53a76291af656ede1c5d29b447a0
Author: Lee Spector <lspector@hampshire.edu>
Date:   Tue Jun 12 18:38:27 2012 -0400

    version bump

commit 96e052af98d4c08c47374d4118bd15055b50effa
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Tue Jun 12 11:27:06 2012 -0400

    Added instructions string_reverse and string_parse_to_chars.

commit 37b45360e47933a6fc1bce4ad9e6c3d1bdb44267
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Tue Jun 12 10:51:24 2012 -0400

    Added string_atoi to instructions.

commit 73410306f59d17f9f112d26739ffd563ca686ebb
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Jun 1 17:42:24 2012 -0400

    Added lexicase selection; misc chages to experimental examples.

commit 283763241c29fe2f661cebfdcab73241c255634f
Merge: f703169 50c890f
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Mar 25 16:28:13 2012 -0400

    Merge branch 'master' into working
    
    Conflicts:
    	src/experimental/geometry.clj

commit 50c890f7b17a3e5cad084e5a17f61a8d31c16842
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Mar 25 16:14:11 2012 -0400

    First version compatible with Clojure 1.3.

commit f703169a71aa2132bc5e49932635ef882231abbb
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Mar 25 14:39:46 2012 -0400

    last commit prior to Clojure 1.3 update

commit d9ab6180d307020e4bb14807a99f1c5b1123dfa7
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:56:52 2012 -0400

    1.3-ifying experimental.nimrod-row1

commit 924d72313c00c191fc0513bbc381736665bfae38
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:43:52 2012 -0400

    1.3-ifying examples.sextic

commit 12954f31cc76bb1e51838abb7544dad06bb2cc44
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:43:18 2012 -0400

    1.3-ifying examples.dsoar

commit fe3c0a3e594e732250355fa73d3c385792b15750
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:42:48 2012 -0400

    1.3-ifying examples.simple-regression

commit 4510e5a7db43b5895370fbc1909bf8441f42c259
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:42:19 2012 -0400

    1.3-ifying examples.odd

commit 243f59a68b3ed8cfb56ea9f8d1da05c77961223d
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:42:13 2012 -0400

    1.3-ifying examples.factorial

commit c133c3e2407b89325295ef08d4aa5b8c59988b61
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:39:21 2012 -0400

    1.3-ifying examples.korns-regression-p12

commit 6e3a6b9a395b54a1a067f64c946794b70d292910
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:33:36 2012 -0400

    1.3-ifying examples.scaled-sextic

commit c4d3b66d9d03735236cee6c8c76edc2a82d78084
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:33:25 2012 -0400

    1.3-ifying examples.argmap-regression

commit dc155aaf125545588be49d5c5e2b5b4107ca912a
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:29:30 2012 -0400

    1.3-ifying examples.intertwined-spirals

commit dbf63e2c4af65c350531b8ca9809146dec386af2
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:25:01 2012 -0400

    1.3-ifying examples.string

commit 6a1b16fcb8673a89a66fd560d7dc3e79bac54a84
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:18:23 2012 -0400

    1.3-ifying examples.mux

commit fa45d71df19f6b935af43ab79481986728ce1280
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:16:58 2012 -0400

    1.3-ifying examples.pagie-hogeweg

commit d2924c6b8bf39fd100ba22523d845cea2d8a6673
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:16:06 2012 -0400

    1.3-ifying examples.tagged-tg8

commit fb3e708ab9a1f1de8c5d9851cb31416d6b1cc1f9
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:15:37 2012 -0400

    1.3-ifying examples.gaussian-mutation-demo

commit ed4ad627d4619ec81484d77e109676afb027be5f
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:14:59 2012 -0400

    1.3-ifying examples.tagged-regression

commit 6de392fae6e50babf51d3890dce17533acab8dd2
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:14:20 2012 -0400

    1.3-ifying examples.tg8

commit 49228f112c887b47b1b7a4e7d485a101869fe2a9
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:12:52 2012 -0400

    1.3-ifying examples.krypto

commit 09c8bd101861c01c4a39b171094bd970eec3978a
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:10:33 2012 -0400

    1.3-ifying examples.mackey-glass-int.

commit 563dd22bc43112ac0007ba72d3d4190421100ecd
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:08:23 2012 -0400

    Correcting clojush version modification.

commit 6e3f8ec0b960e380abe75debf3a025277141a7f1
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:06:41 2012 -0400

    Switching to clojure 1.3.0.

commit 26f07b68d9516b094f7699f612e20312dd97c2f1
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 21:06:02 2012 -0400

    Removing clojure.contrib.math dependency from examples.lawnmower.

commit 1871a3eec33ac34495ba5493090ded98df344c3c
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 20:51:39 2012 -0400

    Switching from clojure.contrib.math to clojure.math.numeric-tower.

commit b32b7b48edc7b7e3715846d58ecdde38d074ef63
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 20:47:14 2012 -0400

    Removing clojure.contrib.seq-utils dependency.

commit a7c49c59d36ff22a7ad621b8239a1b47a0662779
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Mar 23 20:42:18 2012 -0400

    Switching from clojure.contrib.string to clojure.string.

commit 6287d3caa0c484c37f35f59485d22d3952084383
Author: Lee Spector <lspector@hampshire.edu>
Date:   Mon Mar 12 13:30:56 2012 -0400

    Version bump.

commit 7c24ab6cf247dfee059bb70b64db49d2aeff1415
Author: Lee Spector <lspector@hampshire.edu>
Date:   Mon Mar 12 13:27:29 2012 -0400

    Added tagged_when_<num> handling and tagged-when-instruction-erc.

commit 8de8ed95926255aef41241177da259b42020d0be
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Mar 11 19:22:23 2012 -0400

    Version bump.

commit 788680eb1643cd782956e9bc25dfd6ca22e6f99c
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Mar 11 19:20:35 2012 -0400

    Cleanup.

commit 65c0cac57887a8fc37d9bc217f1b06104f61656a
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Mar 11 19:13:27 2012 -0400

    Fixed bug with false literal; added exec_when instruction.

commit 779403d8a4580cd665660256dbe9a1e04c4c58f2
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Mar 11 18:40:02 2012 -0400

    Reformulated geometry example.

commit ac871e85c4251014e4f524bd36a760a04e48f7a6
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Mar 9 15:50:30 2012 -0500

    Cleaned up geometry.clj.

commit 1a428fca9f20c52bbf78ebb1735b15b275e16d56
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Mar 4 13:17:52 2012 -0500

    Removed experimental stuff from geometry.clj.

commit b4002c5fcae81c84e389c6bc19c4966c8c1a53f7
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sat Mar 3 15:03:06 2012 -0500

    Fixed bug that HAH not actually used in select.

commit a7d8b7ce3c60c41d22d915f9d10e96edbba7a83d
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Mar 2 21:35:37 2012 -0500

    version bump

commit 0b182e00899e814961654fc0ca9bb84eff0bfc5c
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Mar 2 21:34:46 2012 -0500

    Deleted class files.

commit 9e51baf21aef9158b61e1f58f19ca167313cfbed
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Mar 2 20:08:24 2012 -0500

    version bump

commit 205e5957a1a8d07a2fb517768c3c5bee68c7a530
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Mar 2 20:04:20 2012 -0500

    Separated HAH error from total error.

commit 0eea0f06b187673e01ae9aeb11b7ab16574a4352
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Mar 2 15:23:56 2012 -0500

    fixed lazy bug in compute-total-error

commit 3ccc9212b3a8905de8a43d4ceb2010eec3a70755
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Mar 2 15:06:14 2012 -0500

    wild experimentation in geometry.clj

commit cec60f76d74ebfaba7373002f39fb8b5bea48eba
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sat Feb 18 07:55:09 2012 -0500

    Version bump.

commit ccfe05217a22974f5ddca9376bddbea555a0adb9
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sat Feb 18 07:54:16 2012 -0500

    Added historically-assessed hardness feature.

commit 3577816f294f01252c0bb34d22a631569b2cd47c
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Feb 17 16:56:51 2012 -0500

    Added geometry.clj example.

commit e234b8f3346241c220b52fa109eb93b523a5520e
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Feb 10 17:20:31 2012 -0500

    version bump

commit 2af49412ceaf7808112d5d2020648832236dba3c
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Feb 10 17:19:07 2012 -0500

    Added float_regression.clj example.

commit 15466455ef7442abe35b9e80d7ab770a54eee0a5
Author: Lee Spector <lspector@hampshire.edu>
Date:   Tue Feb 7 15:11:28 2012 -0500

    version bump

commit ccd25efeb13ffb662e2a4f159c3f14413863011f
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Sat Feb 4 10:00:16 2012 -0500

    Logs now print last Git commit hash and link to GitHub.

commit 1aad5d256dad90f48d3963939ae6bf992a2d7d10
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Jan 22 21:42:23 2012 -0500

    Version bump.

commit 867af8ff8f8b8fd32a45bb59257d3399b1afa84b
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Wed Dec 14 20:08:59 2011 -0500

    Much better lshuffle, uses Java's shuffle with a custom random source.

commit ea49df39db5fa8a7198fcdbf425dcf9e63b04150
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Wed Dec 14 10:54:58 2011 -0500

    Removing the reverse for lists, as Lee pointed out, order doesnt matter at that point.

commit 26cdf4f126ab9347f2e162f5ee787c5a6bf80143
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Wed Dec 14 10:30:20 2011 -0500

    Adding lshuffle. This function is slower than the built-in java shuffle, but it uses a thread-local random generator.

commit dfe2c6474870b7b11a61383212432abb866bad85
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sat Nov 19 11:29:04 2011 -0500

    Version bump.

commit 7393bafcd3ffcb703cff0a660036783c6cb3606e
Merge: 824b7ca 2efc76b
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Nov 18 23:47:22 2011 -0500

    Merge branch 'master', remote-tracking branch 'origin' into simplification_fix

commit 2efc76ba5e475763d935d90fcb5b87071f5ac0ed
Merge: 048f2b9 7c53c60
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Nov 18 15:49:05 2011 -0500

    Version bump.

commit 7c53c604309c4094fc3b13cc7c65d23ed59428fa
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Nov 18 10:24:36 2011 -0500

    Version bump.

commit e1be43bda467087ed5ecdf270ec03a802834ce5d
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Fri Nov 18 09:58:13 2011 -0500

    Fixed version number printing to catch all errors.
    
    Also, will now print version number even if it is not of the form #.#.#

commit 048f2b9ff1805339375dedc2f232c56144b3e16a
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Nov 18 08:53:57 2011 -0500

    Version bump.

commit 824b7cacfd8d7bbc6a08d45fae63923a318b24e9
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Thu Nov 17 15:43:01 2011 -0500

    Added flatten-seqs for use in auto-simplify, otherwise vectors (such as in examples/dsoar.clj) will by flattened.

commit 0f63644fcf5f8a41d0b9f6f6b658a0db3d678636
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Wed Nov 16 11:40:32 2011 -0500

    Added printing of Clojush version to pushgp output.
    
    Also, some minor re-formatting of the pushgp function using Clooj's auto-formatting.

commit da4db60848eef10079b35e9f4e9d61f887d6ae1f
Author: Lee Spector <lspector@hampshire.edu>
Date:   Tue Nov 15 11:04:35 2011 -0500

    Bumped version to 1.0.0.

commit 1e4c75f9e486a575bd79809b28cc5ede89c02915
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Sat Nov 12 14:52:08 2011 -0500

    registered-instructions is now a set.

commit bcb85a7a8ac32b2e0f3750704432efb3a218f64d
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Sat Nov 12 14:46:58 2011 -0500

    Changing define-registered to update the existing instruction, but not conj to registered-instructions.

commit 1d3ce9b370ba3e1f3faf5595085fd0a72e5cd266
Merge: 5faf586 97a57b5
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Sat Nov 12 12:09:01 2011 -0500

    Merge remote-tracking branch 'origin/master' into optional_single_threading

commit 97a57b5815fe94985bb41557e54c1a61230b4397
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sat Nov 12 11:40:17 2011 -0500

    Obsoleted the README version history in favor of the github commit log.

commit f67457af08a4cbe58db06b537209858babfe21a7
Merge: 09f1c11 34a01b9
Author: Kyle Harrington <kyleharrington@serotonin.local>
Date:   Sat Nov 12 06:08:14 2011 -0500

    Merge branch 'master' of github.com:lspector/Clojush

commit 5faf586848891454df48c84fba654e31fe4dc73f
Merge: c21a53b 34a01b9
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Nov 11 10:47:21 2011 -0500

    Merge remote branch 'origin/master' into optional_single_threading

commit 34a01b984c4cf50512175e76f2b4c70ee3c1bcee
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Fri Nov 11 09:52:51 2011 -0500

    Added log about string stack to README.txt.

commit c21a53bf399d3eb0a1791d3d97dc6d5abf1fc796
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Nov 11 08:40:42 2011 -0500

    Changing define-registered to check if an instruction already exists in the instruction table.

commit 74eb07ad36c3bc051e293a4391f4eae02ea9ee52
Merge: 0647397 63eccbc
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Nov 11 08:33:29 2011 -0500

    Merge remote branch 'origin/master' into optional_single_threading

commit 06473970699fe5712f5192e8dab4119c294e6e78
Author: Kyle Harrington <kyleh@cs.brandeis.edu>
Date:   Fri Nov 11 07:56:55 2011 -0500

    Optional single threading, random-seed, lrand-nth, and replacements of non-local random generator calls.

commit 09f1c1102268eaf2d86fab49f152dba129099fb2
Merge: 0eb5de0 63eccbc
Author: Kyle Harrington <kyleharrington@serotonin.local>
Date:   Fri Nov 11 03:25:45 2011 -0500

    merge.

commit 0eb5de023b2c2f069de5121db6894b1eb223fb13
Author: Kyle Harrington <kyleharrington@serotonin.local>
Date:   Fri Nov 11 03:19:54 2011 -0500

    Overlap adjustment.

commit 63eccbcc10864249387c6c1dfad286434d07f04a
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Fri Nov 4 20:38:35 2011 -0400

    Removed testing file string_tests.clj.

commit 07f8d2e8b4ce95be6d60a0e8c3288c7049be7a06
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Fri Nov 4 20:29:59 2011 -0400

    Removed sin_regression.clj.
    This was just a file to test out using PushGP.

commit e54dbc77c42b0329b98df59b0f3fba9010ef0d35
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Fri Nov 4 20:17:11 2011 -0400

    Added a second, more interesting PushGP run to string.clj.

commit c9b6b265c9a22b7cf8726c80c38bd52ecd4f7456
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Fri Nov 4 14:40:05 2011 -0400

    Modified example problem string.clj.

commit 7454314257c29a613159db138d3fb870ea132908
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Fri Nov 4 14:13:58 2011 -0400

    Add string_length.

commit 8bc6e43974469f311b40fbb5f07700a6869ac0a2
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Thu Nov 3 19:46:01 2011 -0400

    Add string_take, which uses the top of the integer stack to shorten the
    top of the string stack to that length.

commit eeaab1ef1902b5316bb2bde8af94242af0606b5b
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Thu Nov 3 19:28:10 2011 -0400

    Add string_concat instruction.

commit a1bc91a1a7ea794271bc0eaa3e386373f4b33fe2
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Fri Oct 28 15:37:46 2011 -0400

    Got simple pushgp string example working.

commit 5941ae11ddd91f4eefd6590f3225c21122f697ac
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Fri Oct 28 15:24:10 2011 -0400

    Add simple pushgp problem using strings.

commit d3020bb089c4c3ad4bb428d73972139c358c5ec8
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Fri Oct 28 13:00:18 2011 -0400

    Add string literals in Clojush.

commit a90dd2e5933102d8d6cd946faf9d33ee957f6ee4
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Fri Oct 28 12:17:31 2011 -0400

    Added file to test string stack.

commit fabcb34167e4baeaa75e796b5e965d709ed0737c
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Thu Oct 27 16:06:20 2011 -0400

    Fix bug in string-rand instruction.

commit 7fce37556f4d6dd18f6c9ef2eae6927ef52d4513
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Thu Oct 27 12:19:12 2011 -0400

    Add instruction string-rand.

commit 7ab3e6175eafbdccc4145de8e7176af1f79acbdf
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Thu Oct 27 11:35:39 2011 -0400

    Add instructions for string stack that are same as for other types.

commit d6cbbdda41cb8d7df059fc8d4fa8c8096bf39cfa
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Thu Oct 27 11:26:57 2011 -0400

    Added a string stack, and reformatted a few things.

commit fcb4545890bcdd88e6099a1701bac3bdd8d9ee2d
Author: Tom Helmuth <trhtom@gmail.com>
Date:   Wed Oct 26 18:16:08 2011 -0400

    Added an example use of Clojush to the src/examples/ directory.

commit c19791079ebf2889e68a6dbfaa6559e484dc8e02
Merge: b15d8e9 98e05e1
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Sep 11 16:56:06 2011 -0400

    Merge branch 'master' of github.com:lspector/Clojush

commit b15d8e9c7bb504d8243b55d2bb92eb462a69dc51
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Sep 11 15:56:58 2011 -0400

    first commit after move to Clooj/Leiningen environment

commit 98e05e135751c1c5cce4af265ae3d58ba334f9e2
Author: Lee Spector <lspector@hampshire.edu>
Date:   Tue Aug 9 18:21:03 2011 -0400

    20110809: - Several additions/enhancements by Kyle Harrington:
                - Converted problem-specific-report to a parameter in pushgp.
                - Added reporting of program repeat counts in population.
                - Added "error-reuse" parameter to pushgp for use in stochastic
                  and dynamic problems (for which reuse would be turned off).
                - Added examples/mackey_glass_int.clj, a symbolic regression
                  problem as described in Langdon & Banzhaf's 2005 paper
                  (citation in file).
                - Added examples/pagie_hogeweg.clj problem, a difficult
                  symbolic regression problem when coevolution is not used.
                  Introduced by Pagie & Hogeweg's 1997 paper (citation in file).

commit 3c7d9ad58315e8e6fcf49e6d0ffdd9b0889d12ce
Author: Lee Spector <lspector@hampshire.edu>
Date:   Thu Jul 14 04:49:12 2011 -0400

    Added "trace" argument to eval-push and run-push, for accumulating traces in states.
    20110714: - Added "trace" argument to eval-push and run-push. If this is
                true then the resulting state will map :trace to a list of
                executed instructions and literals, in reverse order of
                execution. If the argument is :changes then instructions that
                have no effect on the state will be excluded.

commit d3e29c11ad15e106d694f0d4bb82b4f5dc19c1ba
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sat Jul 2 15:04:36 2011 -0400

    20110702: - Several fixes/refinements to tagged-code macros:
                - Fixed incorrect no-op of arg-free calls with empty tag space.
                - Added :additional_args to tagged-code macro structure; the
                  value should be a list of items and these will be executed
                  in order before calling the macro's instruction.
                - Added optional 5th arg to tagged-code-macro-erc; this should
                  be a function of zero args that will be called to produce
                  the value of :additional_args (e.g. if you want to have one
                  random integer arg then you could specify a 5th arg of
                  (fn [] (list (lrand-int 101))).
                - Changed format produced by abbreviate-tagged-code-macros to
                  handle :additional_args and to be slightly more concise.

commit d9e210fe8b4ec137aa6d2d63be13005a4712bbf5
Author: Lee Spector <lspector@hampshire.edu>
Date:   Wed Jun 29 13:32:03 2011 -0400

    20110629: - Fixed abbreviate-tagged-code-macros printing of empty lists.
              - Added seq condition to walklist to permit walking of seqs that
                aren't actually full-fledged lists.

commit c1b13145b0ac5a9fabf629e6a8d33e2ab9536740
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Jun 24 17:50:19 2011 -0400

    20110624(b): - Replaced walk-based code-manipulation with walklist functions
                that only traverse list structure. This fixes an interaction
                between map literals (e.g. tagged-code macros) and program
                structure.

commit 338057ec180cab2ef1cd4b2aec2f3bc3a865fd8d
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Jun 24 11:58:01 2011 -0400

    Tagged-code macros, bug fixes for examples, and other minor changes
    20110624: - Replaced lawnmower and dsoar examples with bugfixed versions
                (thanks to Kyle Harrington).
              - Added namespace and made miscellaneous other changes to
                clojush-tests.clj.
              - Added support for tagged-code macros. Tagged-code macro calls
                have the effect of code instructions, but they take their
                code arguments from the tag space and they tag their code return
                values. They are implemented as macros to leverage the existing
                code instruction set; note that this means that a single call
                will contribute more than one iteration step toward the
                evalpush-limit. Tagged-code macros appear in programs as hash maps
                that map :tagged_code_macro to true, :instruction to a code
                instruction, :argument_tags to a sequence of tags to be used
                to acquire arguments, and :result_tags to a sequence of tags
                to be used for tagging results. Execution of a macro expands
                the needed code onto the exec stack to grab arguments from the tag
                space and push them on the code stack, execute the code instruction,
                and tag results. Note that results will also be left on the code
    			stack if global-pop-when-tagging is false. Conceptually, tag values
    			are "baked in" to these macros in much the same way that tag values
    			are "baked in" to the instruction names for stackless tag
    			instructions; we use hash maps simply because there is more
    			information to bake in and this prevents us from having to parse
    			the names (which would get messy and also waste time). Because
    			the maps make it difficult to read programs, however, a utility
    			function called abbreviate-tagged-code-macros is provided to
    			produce copies of programs with more human-readable (but not
    			currently executable) representations of tagged-macro calls.
    			A tagged-code-macro-erc is provided to generate random tagged-code
    			macros in pushgp runs. A new example, codesize20, provides
    			a simple demonstration of the use of tagged-code macros.

commit 1876afd048471da7ac88486f56644af74f01134d
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sat Jun 18 10:08:12 2011 -0400

    20110618: - Switched to Kyle Harrington's version of overlap; it's more clear,
                possibly faster, and may fix a hard-to-trace bug that cropped up
                in a long evolutionary run (?).

commit 473fb5b5617568be6ce15ac1e232a31f5b0f3f53
Author: Lee Spector <lspector@hampshire.edu>
Date:   Tue Jun 7 21:20:07 2011 -0400

    Added overlap, overlap-demo, code_overlap; removed complex number support
    20110607: - Added overlap utility function, overlap-demo (which just prints
                some examples to show how overlap works), and code_overlap
                instruction. Overlap can be applied to any two (possibly
                nested) things and it returns a number between 0 (meaning
                no overlap) and 1 (meaning exact match). The overlap utility
                function returns a ratio, but the code_overlap instruction
                pushes a float.
              - Removed complex number support from 20110505. There were previous
                reports of problems and I've noticed problems from the fact that
                (apply + ()) => zero (as opposed to 0) in the clojush namespace
                defined by the code as revised for complex number support. If
                someone knows how to re-introduce complex number support without
                such problems then please let me know.

commit 76ab89bdecc3ec823c22365624ed9c96b7bfa09b
Author: Lee Spector <lspector@hampshire.edu>
Date:   Thu May 26 08:43:28 2011 -0400

    20110526: - Enforce size limits on zipper manipulation results.

commit b089c802b4197dd8d7b9f6ccd77cf79f50770342
Author: Lee Spector <lspector@hampshire.edu>
Date:   Tue May 17 15:21:19 2011 -0400

    Added support for Keijzer-style error scaling.
    20110517: - Added a "scaled-errors" function to support error-scaling as
                described by Maarten Keijzer in Scaled Symbolic Regression, in
                Genetic Programming and Evolvable Machines 5(3), pp. 259-269,
                September 2004. This must be used in a problem's error function,
                and then the outputs of the evolved program must be "unscaled."
                See the documentation string for scaled-errors and also
                examples/scaled_sextic.clj for details.
              - Added examples/scaled_sextic.clj to demonstrate the use of
                scaled-errors.
              - Changed examples/sextic.clj to use squared errors and an error
                threshold, in order to facilitate comparisons between the
                versions that do and don't use error scaling.
              - Made minor changes to the korns_regression_p12 example.

commit cb302b8da677e5d2a5b78be08da630aaf1f1d374
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun May 8 16:44:13 2011 -0400

    Complex number support (by Brian Martin)
    20110505: - Added complex number support.  New instructions for the 'complex'
                stack include: pop, dup, swap, rot, flush, eq, stackdepth, yank,
                yankdup, shove, rand, add, sub, mult, divide, fromfloat,
                frominteger, fromfloats, fromintegers, conjugate, magnitude,
                and principal_sqrt. (Brian Martin)

commit 537a4e7151fb77c2a82168cfa2e094876b744354
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Apr 24 22:18:05 2011 -0400

    Gaussian mutation, Gaussian mutation demo, Korns regression example
    20110424: - Added Gaussian mutation for floating point literals. This is
                a genetic operator on par with ordinary mutation, crossover,
                and simplification, with the probability for applying this operator
                set with the gaussian-mutation-probability argument to pushgp
                (which defaults to zero). The behavior of this operator, when used,
                is controlled by two other arguments to pushgp,
                gaussian-mutation-per-number-mutation-probability (which is the
                probability that any particular floating point number in the
                program will actually be mutated -- this defaults to 0.5) and
                gaussian-mutation-standard-deviation (which specifies the standard
                deviation of the Gaussian noise generator that is used to
                produce changes to numbers -- this defaults to 0.1).
              - Added examples/gaussian_mutation_demo.clj to demonstrate Gaussian
                mutation.
              - Added examples/korns_regression_p12.clj, a symbolic regression
                problem based on Michael Korns's draft chapter from GPTP11.

commit abb78ec761ddd6ae47ea600fef8b0619334da5f0
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sat Apr 9 22:48:17 2011 -0400

    Removed no-pop hackage from mux example (thanks Kyle).

commit 58c85603c4f88f3cdbcc612b942547481d48f6b6
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sat Apr 9 21:28:46 2011 -0400

    Added support for no-pop tagging.
    20110409: - Added support for no-pop tagging through a var called
                global-pop-when-tagging (holding an atom with a boolean value)
                and a boolean argument to pushgp called pop-when-tagging.
                The defaults are true, for backwards compatibility. If
                @global-pop-when-tagging is false (which will result from
                passing false as a :pop-when-tagging keyword argument to pushgp)
                then executing instructions of the form tag_<type>_<number>
                will tag a value as usual, but the tagged item will not be popped
                from its source stack.

commit 4c7059288ea5518200a6702ab27e4d231ee76b30
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Mar 27 22:22:57 2011 -0400

    Tag reference bug fixed; mux example added.
    20110322: - Tag reference bug fixed in closest-association (>= changed to <=).
              - Added mux (multiplexer) example (a couple of approaches in one file).

commit 63f6974fce3733c22902f0a0609bcf89b6f0653a
Author: Lee Spector <lspector@hampshire.edu>
Date:   Tue Jan 18 20:22:54 2011 -0500

    tagged_code_<number> instructions, evalpush-time-limit=0 (default) means no time limit
    
    20110118: - Added support for tagged_code_<number> instructions. These are like
                tagged_<number> instructions except that retrieved values are pushed
                onto the code stack rather than the exec stack. Without these the
                only way to get tagged values onto the code stack is to wrap
                values with code_quote prior to tagging. An alternative approach
                is to add new tagging instructions that automatically perform
                code_quote wrapping, but for full generality that would require
                new instructions for each type; also quote-tagged values would
                always be destined for the code stack, while the scheme adopted
                here allows any stored value to be retrieved either to exec or to
                code.
              - A value of 0 for the evalpush-time-limit parameter of pushgp
                now means that no time limit will be enforced. This is also
                now the default.

commit ac0bbf921a68629e067f056ded2f829d82e667a7
Author: Lee Spector <lspector@hampshire.edu>
Date:   Fri Jan 14 11:05:10 2011 -0500

    Fixed type (bzip_rot -> zip_rot, thanks Kyle).

commit cbc57dd4767cd31f7c70dabf7868c6ee92cf2281
Author: Lee Spector <lspector@hampshire.edu>
Date:   Thu Jan 13 08:45:51 2011 -0500

    fixed typo in dsoar.clj top-level call ("tournament") (tx Brian)

commit 82288b4adf8075971cf334db22f3830054c20c64
Author: Lee Spector <lspector@hampshire.edu>
Date:   Wed Jan 12 18:33:28 2011 -0500

    Fixed zipper bugs.

commit 5a36624a571a50833cfef0b425e669e0bfe4ad27
Author: Lee Spector <lspector@hampshire.edu>
Date:   Wed Jan 12 18:33:02 2011 -0500

    Fixed zipper bugs.

commit 3225ebaae165d774ee9a07a53e60f62a322f3d94
Author: Lee Spector <lspector@hampshire.edu>
Date:   Wed Jan 12 01:05:11 2011 -0500

    Zippers, registered-nonrandom, and examples/dsoar.clj
    
    20110111: - Added zipper stack and functions (thanks to Kyle Harrington for
                draft code, although this was re-written).
              - Added registered-nonrandom function.
              - Modified odd.clj example to use registered-nonrandom.
              - Added examples/dsoar.clj, a version of the "Dirt-Sensing,
                Obstacle-Avoiding Robot" (DSOAR) problem first described in:
                  Spector, L. 1996. Simultaneous Evolution of Programs and their
                  Control Structures. In Advances in Genetic Programming 2, edited
                  by P. Angeline and K. Kinnear, pp. 137-154. Cambridge, MA: MIT Press.
                  http://helios.hampshire.edu/lspector/pubs/AiGP2-post-final-e.pdf
                This version was written by Brian Martin in 2010-2011.

commit 1d573308ed84c1651aa6549e00caf8cce7a008fc
Author: Lee Spector <lspector@hampshire.edu>
Date:   Wed Dec 8 21:31:25 2010 -0500

    Added alternative node selection methods for use in mutation and crossover.

commit bdce86ea671bcddca1fbe5418ae63ed3d536a493
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Dec 5 09:08:16 2010 -0500

    Minor enhancements/fixes, intertwined spirals.
    
    20101204: - Added pushgp-map, which allows pushgp calls on maps of arguments,
                and a demonstration of its use in argmap_regression.clj.
              - Added :gen-class and -main definition (thanks Kyle Harrington).
              - Fixed eval-push termination to return :abnormal for exceeding
                time-limit (thanks Kyle Harrington).
    20101205: - Added modified version of Kyle's version of the intertwined
                spirals problem.
              - Minor changes to this README.

commit 71e6bd6da99c9b6ba319334236e061365ae30993
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Dec 5 09:05:34 2010 -0500

    Minor enhancements/fixes, intertwined spirals.
    
    20101204: - Added pushgp-map, which allows pushgp calls on maps of arguments,
                and a demonstration of its use in argmap_regression.clj.
              - Added :gen-class and -main definition (thanks Kyle Harrington).
              - Fixed eval-push termination to return :abnormal for exceeding
                time-limit (thanks Kyle Harrington).
    20101205: - Added modified version of Kyle's version of the intertwined
                spirals problem.
              - Minor changes to this README.

commit 0fe9b646a219fb54f6f7a44ff906c3d1fab5d3bb
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Dec 5 09:03:14 2010 -0500

    Minor enhancements/fixes and intertwined spirals.
    
    20101204: - Added pushgp-map, which allows pushgp calls on maps of arguments,
                and a demonstration of its use in argmap_regression.clj.
              - Added :gen-class and -main definition (thanks Kyle Harrington).
              - Fixed eval-push termination to return :abnormal for exceeding
                time-limit (thanks Kyle Harrington).
    20101205: - Added modified version of Kyle's version of the intertwined
                spirals problem.
              - Minor changes to this README.

commit aef31129de6bc1747ef00ee2685eaa54b31a349d
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Nov 7 10:57:35 2010 -0500

    20101106: - Tweaked parameters in ant examples; among other things,
                increased simplification since bloat was an issue. Also
                added some evolved solutions in comments.
    20101107: - Added Koza's lawnmower problem example; this demonstrates how
                to add a new type/stack on a problem-specific basis, without
                altering clojush.clj.

commit 73ce5e5edf296596c76926a3f8c877b92d29ac7a
Author: Lee Spector <lspector@hampshire.edu>
Date:   Thu Nov 4 22:59:47 2010 -0400

    Added stackless tagging, along with several minor fixes and enhancements:
    20101102: - Switched to new clojure.core/frequencies from depricated
                seq-utils/frequencies (h/t Kyle Harrington), and similarly
                for flatten.
              - Added :include-randoms keyword argument for registered-for-type.
                Defaults to true, but if specified as false then instructions
                ending with "_rand" will be excluded.
              - Raised invalid output penalty in tg8 (it was lower than reasonable
                errors for that problem).
    20101103: - Converted evalpush-limit and evalpush-time-limit into vars
     			(global-evalupush-limit and global-evalpush-time-limit) bound
                to atoms that are reset by calls to pushgp (keyword arguments
                :evalpush-limit and :evalpush-time-limit).
              - Changed pushgp parameters in the tg8.clj example.
    20101104: - Implemented stackless tagging (see http://push.i3ci.hampshire.edu/
                2010/10/28/stackless-tagging/). Tag instructions take one of
                the following forms:
                  tag_<type>_<number>
                    create tage/value association, with the value taken from the
                    stack of the given type and the number serving as the tag
                  untag_<number>
                    remove the association for the closest-matching tag
                  tagged_<number>
                    push the value associated with the closest-matching tag onto
                    the exec stack (or no-op if no associations).
                Here "closest-matching" means the tag with lowest number that
                is greater than or equal to the number of the tag being matched,
                or the lowest-numbered tag if none meet this criterion. Tag
                instructions are not implemented in the same way as other
                instructions; they are detected and handled specially by the
                interpreter (see execute-instruction). Tag instructions
                can be included in pushgp runs by using the new ephemeral
                random constant functions tag-instruction-erc,
                untag-instruction-erc, and tagged-instruction-erc, each of
                which takes a limit (for the numerical part) as an
                argument.
              - Added examples using tags: tagged_ant, tagged_regression, and
                tagged_tg8.

commit 680cbb23b0eb8f78ecb84ae4d72718ec0e7b20da
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Oct 17 19:05:50 2010 -0400

    20101017: - Reverted from records to structs; wasn't significantly faster and
                structs allow for greater flexibility in use of state as map.

commit 704dd2032c735ec44d820ccec593258a96847673
Author: Lee Spector <lspector@hampshire.edu>
Date:   Thu Oct 14 10:45:50 2010 -0400

    Ack NSF

commit 5df679b5ce3a238277a6c3a1a473b341c43a7189
Author: Lee Spector <lspector@hampshire.edu>
Date:   Thu Oct 14 10:18:03 2010 -0400

    20101014: - [Artificial ant, krypto, tg8, decimation]
              - Added articial ant example from Koza (via Luke).
              - Added "tg8" integer symbolic regression problem.
              - Added krypto number puzzle example.
              - Added pushgp "decimation" feature, in which elimination
                tournaments, conducted after fitness testing, reduce the
                size of the population to a specified fraction of its original
                size (specified in a decimation-ratio argument to pushgp;
                the tournament sized is specified via decimation-tournament-size).
                The ordinary tournament-size parameter is still used for subsequent
                selection from the decimated population. Any specified trivial
                geography applies both to decimation and to subsequent selection.

commit 05e96f582d21d07786288e5446ce3881f8e8c51a
Author: Lee Spector <lspector@hampshire.edu>
Date:   Tue Oct 5 21:01:57 2010 -0400

    Jars readded (not sure why they were removed).

commit 2a8cd7906669a4a97c8eb02b078335f1bae0daf0
Author: Lee Spector <lspector@hampshire.edu>
Date:   Tue Oct 5 21:01:08 2010 -0400

    With agent error-handlers.

commit d0ba98953fe2d854f1783e5b52b8debd9baade72
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sat Sep 25 16:15:02 2010 -0400

    first commit with auto directory

commit c6a118974a83198c6c7facbd3948e02e45d9107e
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sat Sep 25 15:50:18 2010 -0400

    fixed namespace names in examples

commit c44de2080e3a67372e3101bec6a58b103293c083
Author: Lee Spector <lspector@hampshire.edu>
Date:   Tue Sep 21 22:40:57 2010 -0400

              - Converted structures to records (a clojure 1.2 feature, should
                be faster).

commit 93cd54f8634df804b806f9cd8cc8cbde1a3e915b
Author: Lee Spector <lspector@hampshire.edu>
Date:   Tue Sep 21 21:56:49 2010 -0400

              - Updated README to mention requirement for clojure 1.2 and to
                remove mention of ClojureX which has been discontinued.

commit 99a9dbbe4967a23bf94aebf18257c6d3f6e34386
Author: Lee Spector <lspector@hampshire.edu>
Date:   Tue Sep 21 21:41:27 2010 -0400

    10200921: - Removed random-element in favor of rand-nth.
              - Cleaned up indentation, miscellaneous other cosmetic things.
              - Added namespaces for all example files.

commit 66e077ff9232bb839a7ecde5cbf96b8c95402f6a
Author: Lee Spector <lspector@hampshire.edu>
Date:   Mon Sep 20 15:02:24 2010 -0400

     -

commit 012abff89d406a1c3b46d735d40e2a0149383e2f
Author: Lee Spector <lspector@hampshire.edu>
Date:   Mon Sep 20 15:01:51 2010 -0400

     -

commit 7ca7ab6d774e9eda854c168e7cf5a6713cc2a759
Author: Lee Spector <lspector@hampshire.edu>
Date:   Mon Sep 20 15:00:24 2010 -0400

    -

commit 2fa801fee985cbffdf6d88a997f35008b52a7971
Author: Lee Spector <lspector@hampshire.edu>
Date:   Mon Sep 20 00:39:35 2010 -0400

              - Added to-do item "Convert structs to records, which should be
    			faster. Experiments with Clojure 1.2 show this to be faster
                but there are not good examples yet to serve as the basis for
                changes.
              - Added atoms for global-atom-generators and
                global-max-points-in-program.
              - Changed pushgp to take keyword arguments rather than a parameter
                map. NOTE: this requires calls to pushgp to be written differently.
                Updated examples to reflect this.

commit fd48da63062cf8f46190d1d7ea8efe832c680ea0
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Sep 19 17:50:43 2010 -0400

     -

commit 7921108534aa49408f0cdce11a51ca4e8be3d786
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Sep 19 17:50:13 2010 -0400

              - Added atom for registered-instructions; NOTE: requires user
                code that refers to registered-instructions to refer to
                @registered-instructions instead. (Example odd.clj changed
                to reflect this.)

commit 84c4eb04f6c48a2ad73af137b5c015a508b10fa5
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Sep 19 16:10:44 2010 -0400

              - Added atom for instruction-table.

commit 46d5e673c429f8784814c1eb09fd1f93b821fcde
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sun Sep 19 16:02:41 2010 -0400

    20100918: - Created Eclipse project.
              - Deleted re-load/backtrace utils.
              - Removed shuffle, as it is now in clojure.core (in Clojure 1.2).
              - Removed gratuitous def in define-registered.

commit 2f63da83395c7b15f15c1d48ff5efdf31b080eb7
Author: Lee Spector <lspector@hampshire.edu>
Date:   Sat Sep 18 19:42:53 2010 -0400

    First commit of Eclipse clojush project.
